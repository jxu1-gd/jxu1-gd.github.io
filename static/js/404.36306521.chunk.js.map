{"version":3,"file":"static/js/404.36306521.chunk.js","mappings":"qbAWMA,EAAAA,SAAAA,IAAAA,EAAAA,EAAAA,GAAAA,EAAAA,GAAAA,IAAAA,GAAAA,EAAAA,EAAAA,GAAAA,GAAAA,SAAAA,IAAAA,IAAAA,GAAAA,EAAAA,EAAAA,GAAAA,KAAAA,GAAAA,IAAAA,IAAAA,EAAAA,UAAAA,OAAAA,EAAAA,IAAAA,MAAAA,GAAAA,EAAAA,EAAAA,EAAAA,EAAAA,IAAAA,EAAAA,GAAAA,UAAAA,GAoK0B,OApK1BA,EAAAA,EAAAA,KAAAA,MAAAA,EAAAA,CAAAA,MAAAA,OAAAA,KAUFC,MAAQ,CACJC,8BAA8B,EAC9BC,qBAAqB,EACrBC,sBAAsB,EACtBC,+BAA+B,GAJ3B,EAmCRC,cAAgB,kBAAM,SAAC,IAAD,CAAMC,WAAW,mBAAvB,EAEhBC,iBAAmB,WACf,OACI,SAAC,IAAD,CACIC,UAAW,EAAKH,cAChBI,QAAS,EAAKC,+BAGzB,EAEDC,iBAAmB,WACf,IAAQC,EAAgB,EAAKZ,MAArBY,YACR,EAAqC,EAAKC,MAAlCP,EAAR,EAAQA,WAAeQ,GAAvB,YAEA,OACI,SAAC,KAAD,gBACIR,WAAYS,GAAAA,CAAG,EAAKC,QAASV,GAC7BW,KAAML,EAAYK,KAClBC,kBAAmBN,EAAYO,2BAC/BC,gBAAiB,EAAKC,qBAClBP,GACAF,KAGf,EAEDU,yBAA2B,WACvB,MAAqC,EAAKT,MAAlCP,EAAR,EAAQA,WAAeQ,GAAvB,YACQF,EAAgB,EAAKZ,MAArBY,YAER,OACI,SAAC,KAAD,wBACIN,WAAYS,GAAAA,CAAG,EAAKC,QAASV,GAC7BiB,IAAKX,EAAYW,KACbT,GACAF,GAJR,IAKIQ,gBAAiB,EAAKC,wBAGjC,EAEDG,gBAAkB,WACd,MAAqC,EAAKX,MAAlCP,EAAR,EAAQA,WAAeQ,GAAvB,YAEA,OACI,SAAC,KAAD,QACIR,WAAYS,GAAAA,CAAG,EAAKC,QAASV,GAC7BmB,KAAK,eACLC,YAAY,qBACZC,SAAS,iDACTC,QAAQ,0BACRR,gBAAiB,EAAKC,qBAClBP,KAGf,EAEDO,oBAAsB,WAClB,EAAKQ,SAAS,CACVzB,+BAA+B,EAC/BH,8BAA8B,EAC9BC,qBAAqB,EACrBC,sBAAsB,KAE7B,EAEDO,4BAA8B,WAC1B,EAAKmB,SAAS,CACVzB,+BAA+B,IAEnC,EAAK0B,eACR,EA+CDd,QAAU,oBAFT,OAES,8BAnJV,WACI,MAKIe,KAAK/B,MAJLC,EADJ,EACIA,6BACAC,EAFJ,EAEIA,oBACAC,EAHJ,EAGIA,qBACAC,EAJJ,EAIIA,8BAGJ,OACI,gCACKA,GAAiC2B,KAAKxB,mBACtCN,GACG8B,KAAKT,2BACRnB,GAAwB4B,KAAKpB,mBAC7BT,GAAuB6B,KAAKP,uBAGxC,+BAED,WACIO,KAAKC,2BACLD,KAAKD,gBACR,kCAED,WACIC,KAAKE,iCACR,4DA4ED,mGACUC,EAAW,GADrB,kBAIiCC,EAAAA,EAAAA,gBAJjC,OAIcC,EAJd,OAKgBC,EACJD,EADIC,cAAeC,EACnBF,EADmBE,UACnBF,EAD8BG,OAAWC,GALrD,OAMYJ,EANZ,GAOQF,EAAStB,YAAc4B,EAEnBH,EACAH,EAASjC,8BAA+B,EAExCiC,EAAS/B,sBAAuB,EAG/BmC,IACDJ,EAAShC,qBAAsB,GAhB3C,kDAmBQgC,EAAShC,qBAAsB,EAnBvC,yBAqBQ6B,KAAKF,SAASK,GArBtB,+HA5EC,IA4ED,sCAyBA,WACI,IAAQO,EAAqBV,KAAKlB,MAA1B4B,iBAEJA,IACAV,KAAKF,SAAS,CACVa,+BAAgCD,EAAiBE,MAAMC,WAE3DH,EAAiBE,MAAMC,SAAW,cAEzC,0CAED,WACI,IAAQH,EAAqBV,KAAKlB,MAA1B4B,iBACAC,EAAmCX,KAAK/B,MAAxC0C,+BAEJD,GAAoBC,IACpBD,EAAiBE,MAAMC,SAAWF,OAEzC,EAlKC3C,CAAmB8C,EAAAA,eAuKzB,a,gEChLaC,EACK,qBADLA,EAEQ,gCAErB,KACUC,cADK,WACY,OAAD,sHACGC,EAAAA,EAAAA,IAAIF,GADP,cACZG,EADY,yBAGXA,GAHW,8CAKhBC,aANK,SAMQC,GAAsB,OAAD,sHACjBC,EAAAA,EAAAA,IAAKN,EAA0BK,GADd,cAC9BE,EAD8B,yBAG7BA,GAH6B","sources":["ChatModule.js","service/ChatService.js"],"sourcesContent":["import cx from 'classnames';\nimport PropTypes from 'prop-types';\nimport { PureComponent } from 'react';\nimport ChooseOptionWindow from './components/choose-option-window/ChooseOptionWindow';\nimport GenericMessage from './components/generic-message/GenericMessage';\nimport Hoop from './components/hoop/Hoop';\nimport Chat from './components/svg/Chat';\nimport IconButtonChat from './components/icon-button-chat/IconButtonChat';\nimport ChatService from './service/ChatService';\nimport './styles/chat-module.scss';\n\nclass ChatModule extends PureComponent {\n    static propTypes = {\n        contextCls: PropTypes.string,\n        containerElement: PropTypes.object,\n        accountIdentifier: PropTypes.string,\n        email: PropTypes.string,\n        brand: PropTypes.string,\n        env: PropTypes.string,\n    };\n\n    state = {\n        shouldShowChooseOptionWindow: false,\n        shouldShowErrorPage: false,\n        shouldShowHoopWindow: false,\n        shouldShowMinimizedIconButton: false,\n    };\n\n    render() {\n        const {\n            shouldShowChooseOptionWindow,\n            shouldShowErrorPage,\n            shouldShowHoopWindow,\n            shouldShowMinimizedIconButton,\n        } = this.state;\n\n        return (\n            <>\n                {shouldShowMinimizedIconButton && this.renderIconButton()}\n                {shouldShowChooseOptionWindow &&\n                    this.renderChooseOptionWindow()}\n                {shouldShowHoopWindow && this.renderHoopWindow()}\n                {shouldShowErrorPage && this.renderErrorPage()}\n            </>\n        );\n    }\n\n    componentDidMount() {\n        this.setContainerElementStyle();\n        this.fetchConfig();\n    }\n\n    componentWillUnmount() {\n        this.restoreContainerElementStyle();\n    }\n\n    renderSvgChat = () => <Chat contextCls=\"svg-container\" />;\n\n    renderIconButton = () => {\n        return (\n            <IconButtonChat\n                renderSvg={this.renderSvgChat}\n                onClick={this.handleMinimizedIconBtnClick}\n            />\n        );\n    };\n\n    renderHoopWindow = () => {\n        const { chatConfigs } = this.state;\n        const { contextCls, ...restProps } = this.props;\n\n        return (\n            <Hoop\n                contextCls={cx(this.baseCls, contextCls)}\n                hoop={chatConfigs.hoop}\n                isLeaveMsgEnabled={chatConfigs.isLeaveAgentMessageEnabled}\n                onCloseBtnClick={this.handleCloseBtnClick}\n                {...restProps}\n                {...chatConfigs}\n            />\n        );\n    };\n\n    renderChooseOptionWindow = () => {\n        const { contextCls, ...restProps } = this.props;\n        const { chatConfigs } = this.state;\n\n        return (\n            <ChooseOptionWindow\n                contextCls={cx(this.baseCls, contextCls)}\n                ewt={chatConfigs.ewt}\n                {...restProps}\n                {...chatConfigs}\n                onCloseBtnClick={this.handleCloseBtnClick}\n            />\n        );\n    };\n\n    renderErrorPage = () => {\n        const { contextCls, ...restProps } = this.props;\n\n        return (\n            <GenericMessage\n                contextCls={cx(this.baseCls, contextCls)}\n                icon=\"WarningAlert\"\n                windowTitle=\"Chat with an agent\"\n                headText=\"There was a problem connecting to chat support\"\n                subText=\"Please try again later.\"\n                onCloseBtnClick={this.handleCloseBtnClick}\n                {...restProps}\n            />\n        );\n    };\n\n    handleCloseBtnClick = () => {\n        this.setState({\n            shouldShowMinimizedIconButton: true,\n            shouldShowChooseOptionWindow: false,\n            shouldShowErrorPage: false,\n            shouldShowHoopWindow: false,\n        });\n    };\n\n    handleMinimizedIconBtnClick = () => {\n        this.setState({\n            shouldShowMinimizedIconButton: false,\n        });\n        this.fetchConfig();\n    };\n\n    async fetchConfig() {\n        const newState = {};\n\n        try {\n            const chatConfig = await ChatService.getChatConfig();\n            const { isAgentOnline, isSuccess, errors, ...restConfig } =\n                chatConfig;\n            newState.chatConfigs = restConfig;\n\n            if (isAgentOnline) {\n                newState.shouldShowChooseOptionWindow = true;\n            } else {\n                newState.shouldShowHoopWindow = true;\n            }\n\n            if (!isSuccess) {\n                newState.shouldShowErrorPage = true;\n            }\n        } catch (e) {\n            newState.shouldShowErrorPage = true;\n        } finally {\n            this.setState(newState);\n        }\n    }\n\n    setContainerElementStyle() {\n        const { containerElement } = this.props;\n\n        if (containerElement) {\n            this.setState({\n                originContainerElementPosition: containerElement.style.position,\n            });\n            containerElement.style.position = 'relative';\n        }\n    }\n\n    restoreContainerElementStyle() {\n        const { containerElement } = this.props;\n        const { originContainerElementPosition } = this.state;\n\n        if (containerElement && originContainerElementPosition) {\n            containerElement.style.position = originContainerElementPosition;\n        }\n    }\n\n    baseCls = 'web-chat-module';\n}\n\nexport default ChatModule;\n","import { get, post } from '@Green-Dot-Corporation/eureka-lib-fetch-utils';\n\nexport const chatUrls = {\n    getConfigUrl: '/v1/api/gbr/config',\n    leaveMessageUrl: '/v1/api/gbr/leaveagentmessage',\n};\nexport default {\n    async getChatConfig() {\n        const config = await get(chatUrls.getConfigUrl);\n\n        return config;\n    },\n    async leaveMessage(leaveMessageRequest) {\n        const resp = await post(chatUrls.leaveMessageUrl, leaveMessageRequest);\n\n        return resp;\n    },\n};\n"],"names":["ChatModule","state","shouldShowChooseOptionWindow","shouldShowErrorPage","shouldShowHoopWindow","shouldShowMinimizedIconButton","renderSvgChat","contextCls","renderIconButton","renderSvg","onClick","handleMinimizedIconBtnClick","renderHoopWindow","chatConfigs","props","restProps","cx","baseCls","hoop","isLeaveMsgEnabled","isLeaveAgentMessageEnabled","onCloseBtnClick","handleCloseBtnClick","renderChooseOptionWindow","ewt","renderErrorPage","icon","windowTitle","headText","subText","setState","fetchConfig","this","setContainerElementStyle","restoreContainerElementStyle","newState","ChatService","chatConfig","isAgentOnline","isSuccess","errors","restConfig","containerElement","originContainerElementPosition","style","position","PureComponent","chatUrls","getChatConfig","get","config","leaveMessage","leaveMessageRequest","post","resp"],"sourceRoot":""}