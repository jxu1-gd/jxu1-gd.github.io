{"version":3,"file":"static/js/224.08e6539d.chunk.js","mappings":"ySAQQA,EAAuBC,EAAAA,EAAAA,QAAdC,EAAcD,EAAAA,EAAAA,UAEzBE,EAAAA,SAAAA,IAAAA,EAAAA,EAAAA,GAAAA,EAAAA,GAAAA,IAAAA,GAAAA,EAAAA,EAAAA,GAAAA,GAAAA,SAAAA,IAAAA,IAAAA,GAAAA,EAAAA,EAAAA,GAAAA,KAAAA,GAAAA,IAAAA,IAAAA,EAAAA,UAAAA,OAAAA,EAAAA,IAAAA,MAAAA,GAAAA,EAAAA,EAAAA,EAAAA,EAAAA,IAAAA,EAAAA,GAAAA,UAAAA,GAgFwC,OAhFxCA,EAAAA,EAAAA,KAAAA,MAAAA,EAAAA,CAAAA,MAAAA,OAAAA,KA4BFC,mBAAqB,WACjB,IAAQC,EAAiB,EAAKC,MAAtBD,aAEFE,EAAgBF,EAAaG,MAAK,SAACC,GACrC,OAAOA,EAAOC,UAAYV,KAExBW,EAAkBN,EAAaG,MAAK,SAACC,GACvC,OAAOA,EAAOC,UAAYR,KAG9B,OACI,gCACKS,GAAmB,EAAKC,aAAaD,GACrCJ,GAAiB,EAAKK,aAAaL,OAG/C,EAEDK,aAAe,SAACH,GACZ,IAAQI,EAAsCJ,EAAtCI,QAASC,EAA6BL,EAA7BK,KAAMJ,EAAuBD,EAAvBC,QAASK,EAAcN,EAAdM,UAC1BC,EAAS,EAAKC,mBAEpB,OACI,SAACC,EAAA,EAAD,CACIC,WAAYC,GAAAA,CAAG,GAAD,OAAI,EAAKC,QAAT,SAAyBL,GACvCF,KAAMA,EACNJ,QAASA,EACTG,QAASA,EACT,aAAYE,KAGvB,EAEDO,UAAY,WAAO,IAAD,EACNC,EAAY,EAAKjB,MAAjBiB,QAER,OAAO,EAAP,uBACQ,EAAKF,QADb,kBACmD,SAAZE,IADvC,mBAEQ,EAAKF,QAFb,gBAEiD,UAAZE,GAFrC,GAIH,EAEDN,iBAAmB,WACf,IAAQZ,EAAiB,EAAKC,MAAtBD,aAER,OAAO,oBACC,EAAKgB,QADb,iBAC8D,IAAxBhB,EAAamB,SAEtD,EAEDH,QAAU,gBAAgB,EAE1BI,eAAiB,2BAtDhB,OAsDgB,8BArEjB,WACI,MAAiCC,KAAKpB,MAA9Ba,EAAR,EAAQA,WAAYQ,EAApB,EAAoBA,SACdX,EAASU,KAAKJ,YAEpB,OACI,SAACM,EAAA,EAAD,CACIC,iBAAkBT,GAAAA,CAAGM,KAAKL,QAASL,EAAQG,GAC3CW,kBAAmBV,GAAAA,CAAGM,KAAKD,eAAgBN,GAC3Cf,mBAAoBsB,KAAKtB,mBACzB2B,gBAAgB,EAChBC,QAAM,EALV,SAOKL,QAGZ,EA1BCxB,CAAqB8B,EAAAA,eAArB9B,EAOK+B,aAAe,CAClB7B,aAAc,IA2EtB,Q,2BCpFM8B,EAAAA,SAAAA,IAAAA,EAAAA,EAAAA,GAAAA,EAAAA,GAAAA,IAAAA,GAAAA,EAAAA,EAAAA,GAAAA,GAAAA,SAAAA,IAAAA,IAAAA,GAAAA,EAAAA,EAAAA,GAAAA,KAAAA,GAAAA,IAAAA,IAAAA,EAAAA,UAAAA,OAAAA,EAAAA,IAAAA,MAAAA,GAAAA,EAAAA,EAAAA,EAAAA,EAAAA,IAAAA,EAAAA,GAAAA,UAAAA,GA0FiCd,OA1FjCc,EAAAA,EAAAA,KAAAA,MAAAA,EAAAA,CAAAA,MAAAA,OAAAA,KA8BFC,cAAgB,WACZ,MAA6D,EAAK9B,MAA1D+B,EAAR,EAAQA,MAAOC,EAAf,EAAeA,sBAAuBC,EAAtC,EAAsCA,mBAEtC,OACI,iCACI,gBAAKC,UAAS,UAAK,EAAKnB,QAAV,WAAd,SAA2CgB,IAC1CC,GAAyB,EAAKG,oBAC9BF,GAAsB,EAAKG,qBAGvC,EAEDA,eAAiB,WACb,IAAQC,EAAoB,EAAKrC,MAAzBqC,gBAER,OACI,gBACIH,UAAWpB,GAAAA,CACP,EAAKwB,yBADI,UAEN,EAAKA,yBAFC,0BADjB,UAMI,SAAC1B,EAAA,EAAD,CACIC,WAAYC,GAAAA,CAAG,GAAD,OAAI,EAAKC,QAAT,gBACdwB,WAAY,EAAKC,mBACjBjC,QAAS8B,EAET,aAAW,oBAI1B,EAEDF,kBAAoB,WAChB,IAAQM,EAAuB,EAAKzC,MAA5ByC,mBAER,OACI,gBACIP,UAAWpB,GAAAA,CACP,EAAKwB,yBADI,UAEN,EAAKA,yBAFC,6BADjB,UAMI,SAAC1B,EAAA,EAAD,CACIC,WAAYC,GAAAA,CAAG,GAAD,OAAI,EAAKC,QAAT,mBACdwB,WAAY,EAAKG,sBACjBnC,QAASkC,EAET,aAAW,uBAI1B,EAEDC,sBAAwB,kBAAM,SAACC,EAAA,EAAD,KAAN,EAExBH,mBAAqB,kBAAM,SAACI,EAAA,EAAD,KAAN,EAErB7B,QAAU,4BAA4B,EAEtCuB,yBAAAA,GAAAA,OAA8B,EAAKvB,QAAAA,yBAAAA,EA9DlC,OA8DkCA,EAAAA,EAAAA,GAAAA,EAAAA,CAAAA,CAAAA,IAAAA,SAAAA,MAzEnC,WACI,MAAiCK,KAAKpB,MAA9Ba,EAAR,EAAQA,WAAYQ,EAApB,EAAoBA,SAEpB,OACI,SAACwB,EAAA,EAAD,CACIf,cAAeV,KAAKU,cACpBjB,WAAYC,GAAAA,CAAGM,KAAKL,QAASF,GAFjC,SAIKQ,QAGZ,EA5BCQ,CAAwBF,EAAAA,eAAxBE,EAUKD,aAAe,CAClBI,uBAAuB,EACvBC,oBAAoB,EACpBI,gBAAiB,kBAAMS,QAAQC,WAC/BN,mBAAoB,kBAAMK,QAAQC,YA+E1C,Q,kBC9FMC,EAAAA,SAAAA,IAAAA,EAAAA,EAAAA,GAAAA,EAAAA,GAAAA,IAAAA,GAAAA,EAAAA,EAAAA,GAAAA,GAAAA,SAAAA,IAAAA,IAAAA,GAAAA,EAAAA,EAAAA,GAAAA,KAAAA,GAAAA,IAAAA,IAAAA,EAAAA,UAAAA,OAAAA,EAAAA,IAAAA,MAAAA,GAAAA,EAAAA,EAAAA,EAAAA,EAAAA,IAAAA,EAAAA,GAAAA,UAAAA,GAqF0B,OArF1BA,EAAAA,EAAAA,KAAAA,MAAAA,EAAAA,CAAAA,MAAAA,OAAAA,KAwDFC,cAAgB,WAGZ,OAAOC,EAFe,EAAKlD,MAAnBkD,cAGX,EAEDC,6BAA+B,kBAAM,SAACC,EAAA,EAAD,KAAN,EAE/BC,kBAAoB,YAEhB9C,EADoB,EAAKP,MAAjBO,YAEX,EAED+C,eAAiB,WACbC,QAAQC,IAAI,cACf,EAGDxC,UAAY,WAAO,IAAD,EACNyC,EAAoB,EAAKzD,MAAzByD,gBAER,OAAO,EAAP,uBACQ,EAAK1C,QADb,oBACyC0C,IADzC,mBAEQ,EAAK1C,QAFb,qBAE0C0C,GAF1C,GAIH,EAID1C,QAAU,oBA/BT,OA+BS,8BArEV,WACI,MAAoDK,KAAKpB,MAAjDa,EAAR,EAAQA,WAAYL,EAApB,EAAoBA,KAAMkD,EAA1B,EAA0BA,KAAMD,EAAhC,EAAgCA,gBAC1B/C,EAASU,KAAKJ,YAEpB,OACI,gBACIT,QAASa,KAAKiC,kBACdM,WAAYvC,KAAKkC,eACjBM,KAAK,SACLC,SAAU,EACV3B,UAAS,UAAKd,KAAKL,QAAV,sBALb,UAOI,SAAC+C,EAAA,EAAD,CAAUjD,WAAYC,GAAAA,CAAGM,KAAKL,QAASL,EAAQG,GAA/C,UACI,UAAC,EAAAkD,SAAD,WACK3C,KAAK6B,iBACN,iBAAKf,UAAS,UAAKd,KAAKL,QAAV,yBAAd,UACKP,IACG,cACI0B,UAAS,UAAKd,KAAKL,QAAV,UACT,aAAYP,EAFhB,SAIKA,IAGRkD,IACG,cACIxB,UAAS,UAAKd,KAAKL,QAAV,UACT,aAAY2C,EAFhB,SAIKA,OAIZD,GAAmBrC,KAAK+B,0CAK5C,EAtDCH,CAAerB,EAAAA,eAAfqB,EAUKpB,aAAe,CAClB6B,iBAAiB,EACjBlD,QAAS,kBAAMuC,QAAQC,WACvBG,UAAW,cA2EnB,QC5FMc,EAAAA,SAAAA,IAAAA,EAAAA,EAAAA,GAAAA,EAAAA,GAAAA,IAAAA,GAAAA,EAAAA,EAAAA,GAAAA,GAAAA,SAAAA,IAAAA,IAAAA,GAAAA,EAAAA,EAAAA,GAAAA,KAAAA,GAAAA,IAAAA,IAAAA,EAAAA,UAAAA,OAAAA,EAAAA,IAAAA,MAAAA,GAAAA,EAAAA,EAAAA,EAAAA,EAAAA,IAAAA,EAAAA,GAAAA,UAAAA,GAkI4B,OAlI5BA,EAAAA,EAAAA,KAAAA,MAAAA,EAAAA,CAAAA,MAAAA,OAAAA,KAkIFjD,QAAU,sBAFT,OAES,8BA7HV,WACI,IAAQF,EAAeO,KAAKpB,MAApBa,WAER,OACI,iBAAMqB,UAAWpB,GAAAA,CAAGM,KAAKL,QAASF,GAAlC,UACI,iBACIoD,MAAM,KACNC,OAAO,KACPC,QAAQ,YACRC,KAAK,OACLC,MAAM,6BALV,WAOI,eAAGC,SAAS,0BAAZ,WACI,iBACIC,EAAE,4OACFH,KAAK,WAET,iBACIG,EAAE,oNACFC,OAAO,QACPC,YAAY,MACZC,iBAAiB,KACjBC,cAAc,QACdC,eAAe,WAEnB,iBACIL,EAAE,mCACFC,OAAO,QACPC,YAAY,MACZC,iBAAiB,KACjBC,cAAc,QACdC,eAAe,WAEnB,iBACIL,EAAE,2BACFC,OAAO,QACPC,YAAY,MACZC,iBAAiB,KACjBC,cAAc,QACdC,eAAe,WAEnB,iBACIL,EAAE,kNACFH,KAAK,aAET,iBACIG,EAAE,kNACFC,OAAO,QACPC,YAAY,MACZC,iBAAiB,KACjBC,cAAc,QACdC,eAAe,WAEnB,iBACIL,EAAE,2KACFC,OAAO,QACPC,YAAY,MACZC,iBAAiB,KACjBC,cAAc,QACdC,eAAe,WAEnB,iBACIL,EAAE,kNACFH,KAAK,WAET,iBACIG,EAAE,oRACFH,KAAK,WAET,iBACIG,EAAE,2PACFC,OAAO,QACPC,YAAY,MACZC,iBAAiB,KACjBC,cAAc,QACdC,eAAe,WAEnB,iBACIL,EAAE,mCACFC,OAAO,QACPC,YAAY,MACZC,iBAAiB,KACjBC,cAAc,QACdC,eAAe,WAEnB,iBACIL,EAAE,0BACFC,OAAO,QACPC,YAAY,MACZC,iBAAiB,KACjBC,cAAc,QACdC,eAAe,WAEnB,iBACIL,EAAE,q9CACFH,KAAK,aAET,iBACIG,EAAE,2MACFH,KAAK,QACLI,OAAO,QACPC,YAAY,MACZC,iBAAiB,KACjBC,cAAc,QACdC,eAAe,WAEnB,iBACIL,EAAE,k+CACFC,OAAO,QACPC,YAAY,MACZC,iBAAiB,KACjBC,cAAc,QACdC,eAAe,cAGvB,2BACI,qBAAUC,GAAG,oBAAb,UACI,iBAAMZ,MAAM,KAAKC,OAAO,KAAKE,KAAK,uBAMzD,EAhICJ,CAAarC,EAAAA,eAqInB,ICrIMmD,EAAAA,SAAAA,IAAAA,EAAAA,EAAAA,GAAAA,EAAAA,GAAAA,IAAAA,GAAAA,EAAAA,EAAAA,GAAAA,GAAAA,SAAAA,IAAAA,IAAAA,GAAAA,EAAAA,EAAAA,GAAAA,KAAAA,GAAAA,IAAAA,IAAAA,EAAAA,UAAAA,OAAAA,EAAAA,IAAAA,MAAAA,GAAAA,EAAAA,EAAAA,EAAAA,EAAAA,IAAAA,EAAAA,GAAAA,UAAAA,GA4B+B,OA5B/BA,EAAAA,EAAAA,KAAAA,MAAAA,EAAAA,CAAAA,MAAAA,OAAAA,KA4BF/D,QAAU,yBAFT,OAES,8BAvBV,WACI,IAAQF,EAAeO,KAAKpB,MAApBa,WAER,OACI,iBAAMqB,UAAWpB,GAAAA,CAAGM,KAAKL,QAASF,GAAlC,UACI,gBACIoD,MAAM,KACNC,OAAO,KACPC,QAAQ,YACRC,KAAK,OACLC,MAAM,6BALV,UAOI,iBACIU,SAAS,UACTC,SAAS,UACTT,EAAE,6oEACFH,KAAK,oBAKxB,EA1BCU,CAAgBnD,EAAAA,eA+BtB,IC/BMsD,EAAAA,SAAAA,IAAAA,EAAAA,EAAAA,GAAAA,EAAAA,GAAAA,IAAAA,GAAAA,EAAAA,EAAAA,GAAAA,GAAAA,SAAAA,IAAAA,IAAAA,GAAAA,EAAAA,EAAAA,GAAAA,KAAAA,GAAAA,IAAAA,IAAAA,EAAAA,UAAAA,OAAAA,EAAAA,IAAAA,MAAAA,GAAAA,EAAAA,EAAAA,EAAAA,EAAAA,IAAAA,EAAAA,GAAAA,UAAAA,GA0B+B,OA1B/BA,EAAAA,EAAAA,KAAAA,MAAAA,EAAAA,CAAAA,MAAAA,OAAAA,KA0BFlE,QAAU,yBAFT,OAES,8BArBV,WACI,IAAQF,EAAeO,KAAKpB,MAApBa,WAER,OACI,iBAAMqB,UAAWpB,GAAAA,CAAGM,KAAKL,QAASF,GAAlC,UACI,gBACIoD,MAAM,KACNC,OAAO,KACPC,QAAQ,YACRC,KAAK,OACLC,MAAM,6BALV,UAOI,iBACIE,EAAE,0uDACFH,KAAK,oBAKxB,EAxBCa,CAAgBtD,EAAAA,eA6BtB,IChBQjC,EAAuBC,EAAAA,EAAAA,QAAdC,EAAcD,EAAAA,EAAAA,UACzBuF,EAAAA,SAAAA,IAAAA,EAAAA,EAAAA,GAAAA,EAAAA,GAAAA,IAAAA,GAAAA,EAAAA,EAAAA,GAAAA,GAWF,aAAe,IAAD,yBACV,gBA4BJhC,UAAY,WACR,IAAQrC,EAAe,EAAKb,MAApBa,WAER,OACI,SAAC,EAAD,CACIA,WAAYC,GAAAA,CAAG,GAAD,OACP,EAAKC,QADE,0BAEVF,MApCF,EA0CdsE,mBAAqB,WACjB,IAAQtE,EAAe,EAAKb,MAApBa,WACFd,EAAe,CACjB,CACIK,QAASV,EACTc,KAAM,gBACNC,UAAW,gBACXF,QAAS,EAAK6E,uBAElB,CACIhF,QAASR,EACTY,KAAM,SACNC,UAAW,SACXF,QAAS,EAAK8E,0BAItB,OACI,UAAC,EAAD,CACIxE,WAAYC,GAAAA,CAAG,GAAD,OAAI,EAAKC,QAAT,mBAAmCF,GACjDd,aAAcA,EACdkB,QAAQ,OAHZ,WAKI,SAACqE,EAAA,EAAD,IACC,EAAKC,mBACL,EAAKC,sBAnEJ,EAwEdC,iBAAmB,WACf,IAAQ5E,EAAe,EAAKb,MAApBa,WACFd,EAAe,CACjB,CACIK,QAASV,EACTc,KAAM,KACNC,UAAW,KACXF,QAAS,EAAK6E,wBAItB,OACI,UAAC,EAAD,CACIvE,WAAYC,GAAAA,CAAG,GAAD,OAAI,EAAKC,QAAT,mBAAmCF,GACjDd,aAAcA,EACdkB,QAAQ,QAHZ,WAKI,SAACyE,EAAA,EAAD,IACC,EAAKC,wBACL,EAAKC,2BA3FJ,EAgGdL,iBAAmB,WACf,OACI,gBAAKrD,UAAU,uBAAf,2DAlGM,EAwGdyD,sBAAwB,WACpB,OACI,gBAAKzD,UAAU,uBAAf,6CA1GM,EAgHd0D,qBAAuB,WACnB,OACI,gBAAK1D,UAAU,sBAAf,kEAlHM,EAwHdsD,gBAAkB,WACd,OACI,gBAAKtD,UAAU,sBAAf,oEA1HM,EAgId2D,aAAe,WACX,IAAQC,EAAgB,EAAK9F,MAArB8F,YAER,OACI,gBACI5D,UAAS,UAAK,EAAKnB,QAAV,4BACT,aAAY+E,EAFhB,SAIKA,KAxIC,EA6IdC,cAAgB,WACZ,OACI,iBAAK7D,UAAS,UAAK,EAAKnB,QAAV,uBAAd,WAEI,SAAC,EAAD,CACIF,WAAU,UAAK,EAAKE,QAAV,oBACV0C,iBAAe,EACfjD,KAAK,4BACLkD,KAAK,iCACLnD,QAAS,EAAKyF,yBACd9C,UAAW,EAAK+C,oBAGpB,SAAC,EAAD,CACIpF,WAAU,UAAK,EAAKE,QAAV,oBACV0C,iBAAe,EACfjD,KAAK,kBACLkD,KAAK,mDACLnD,QAAS,EAAK2F,yBACdhD,UAAW,EAAKiD,uBAhKlB,EAsKdF,iBAAmB,kBACf,SAAC,EAAD,CAASpF,WAAU,UAAK,EAAKE,QAAV,sBAvKT,EA0KdoF,iBAAmB,kBACf,SAAC,EAAD,CAAStF,WAAU,UAAK,EAAKE,QAAV,sBA3KT,EA8KdqF,oBAAsB,WAElB7C,QAAQC,IAAI,oBAhLF,EAmLdwC,yBAA2B,WAEvBzC,QAAQC,IAAI,wBACZ,EAAK6C,SAAS,CAAEC,wBAAwB,KAtL9B,EAyLdJ,yBAA2B,WAEvB3C,QAAQC,IAAI,wBACZ,EAAK6C,SAAS,CAAEE,sBAAsB,KA5L5B,EA+LdlB,wBAA0B,WACtB,EAAKgB,SAAS,CAAEC,wBAAwB,KAhM9B,EAmMdlB,sBAAwB,WACpB,EAAKiB,SAAS,CACVC,wBAAwB,EACxBC,sBAAsB,KAtMhB,EA0MdxF,QAAU,uBAxMN,EAAKyF,MAAQ,CACTF,wBAAwB,EACxBC,sBAAsB,GAJhB,EA2Bb,OArBA,8BAED,WACI,IAAQ1F,EAAeO,KAAKpB,MAApBa,WACR,EAAyDO,KAAKoF,MAAtDF,EAAR,EAAQA,uBAAwBC,EAAhC,EAAgCA,qBAEhC,OACI,UAAC,EAAD,CACI1F,WAAYC,GAAAA,CAAGM,KAAKL,QAASF,GAC7BoB,oBAAkB,EAClBI,gBAAiBjB,KAAKgF,oBAH1B,WAKI,iBAAKlE,UAAS,UAAKd,KAAKL,QAAV,sBAAd,UACKK,KAAK8B,YACL9B,KAAKyE,kBAETzE,KAAK2E,gBACLO,GAA0BlF,KAAK+D,qBAC/BoB,GAAwBnF,KAAKqE,0BAGzC,EAtCCP,CAA2BvD,EAAAA,eAA3BuD,EAMKtD,aAAe,CAElBkE,YAAa,oBAgNrB","sources":["components/modal-wrapper/ModalWrapper.js","components/window-container/WindowContainer.js","components/choose-option-window/Option.js","components/svg/Help.js","components/svg/Support.js","components/svg/Message.js","components/choose-option-window/ChooseOptionWindow.js"],"sourcesContent":["import { PureComponent } from 'react';\nimport PropTypes from 'prop-types';\nimport cx from 'classnames';\nimport { Modal } from '@Green-Dot-Corporation/eureka-ui-modals';\nimport { Button, VARIANTS } from '@Green-Dot-Corporation/eureka-ui-buttons';\n// Styles\nimport './styles/modal-wrapper.scss';\n\nconst { PRIMARY, SECONDARY } = VARIANTS;\n\nclass ModalWrapper extends PureComponent {\n    static propTypes = {\n        contextCls: PropTypes.string,\n        modalActions: PropTypes.array,\n        svgType: PropTypes.oneOf(['info', 'error']),\n    };\n\n    static defaultProps = {\n        modalActions: [],\n    };\n\n    render() {\n        const { contextCls, children } = this.props;\n        const modCls = this.getModCls();\n\n        return (\n            <Modal\n                dialogContextCls={cx(this.baseCls, modCls, contextCls)}\n                overlayContextCls={cx(this.baseOverlayCls, contextCls)}\n                renderModalActions={this.renderModalActions}\n                hasCloseButton={false}\n                isOpen\n            >\n                {children}\n            </Modal>\n        );\n    }\n\n    renderModalActions = () => {\n        const { modalActions } = this.props;\n\n        const primaryAction = modalActions.find((action) => {\n            return action.variant === PRIMARY;\n        });\n        const secondaryAction = modalActions.find((action) => {\n            return action.variant === SECONDARY;\n        });\n\n        return (\n            <>\n                {secondaryAction && this.renderAction(secondaryAction)}\n                {primaryAction && this.renderAction(primaryAction)}\n            </>\n        );\n    };\n\n    renderAction = (action) => {\n        const { onClick, text, variant, ariaLabel } = action;\n        const modCls = this.getActionsModCls();\n\n        return (\n            <Button\n                contextCls={cx(`${this.baseCls}__btn`, modCls)}\n                text={text}\n                variant={variant}\n                onClick={onClick}\n                aria-label={ariaLabel}\n            />\n        );\n    };\n\n    getModCls = () => {\n        const { svgType } = this.props;\n\n        return {\n            [`${this.baseCls}__svg--primary`]: svgType === 'info',\n            [`${this.baseCls}__svg--error`]: svgType === 'error',\n        };\n    };\n\n    getActionsModCls = () => {\n        const { modalActions } = this.props;\n\n        return {\n            [`${this.baseCls}__btn--single`]: modalActions.length === 1,\n        };\n    };\n\n    baseCls = 'modal-wrapper';\n\n    baseOverlayCls = 'modal-wrapper__overlay';\n}\n\nexport default ModalWrapper;\n","import { PureComponent } from 'react';\nimport PropTypes from 'prop-types';\nimport cx from 'classnames';\nimport { Tile } from '@Green-Dot-Corporation/eureka-ui-layouts';\nimport { EurekaMinus, EurekaX } from '@Green-Dot-Corporation/eureka-ui-icons';\nimport { Button } from '@Green-Dot-Corporation/eureka-ui-buttons';\n// Styles\nimport './styles/window-container.scss';\n\nclass WindowContainer extends PureComponent {\n    static propTypes = {\n        contextCls: PropTypes.string,\n        title: PropTypes.string,\n        shouldShowMinimizeBtn: PropTypes.bool,\n        shouldShowCloseBtn: PropTypes.bool,\n        onCloseBtnClick: PropTypes.func,\n        onMinimizeBtnClick: PropTypes.func,\n    };\n\n    static defaultProps = {\n        shouldShowMinimizeBtn: false,\n        shouldShowCloseBtn: false,\n        onCloseBtnClick: () => Promise.resolve(),\n        onMinimizeBtnClick: () => Promise.resolve(),\n    };\n\n    render() {\n        const { contextCls, children } = this.props;\n\n        return (\n            <Tile\n                renderHeading={this.renderHeading}\n                contextCls={cx(this.baseCls, contextCls)}\n            >\n                {children}\n            </Tile>\n        );\n    }\n\n    renderHeading = () => {\n        const { title, shouldShowMinimizeBtn, shouldShowCloseBtn } = this.props;\n\n        return (\n            <>\n                <div className={`${this.baseCls}__title`}>{title}</div>\n                {shouldShowMinimizeBtn && this.renderMinimizeBtn()}\n                {shouldShowCloseBtn && this.renderCloseBtn()}\n            </>\n        );\n    };\n\n    renderCloseBtn = () => {\n        const { onCloseBtnClick } = this.props;\n\n        return (\n            <div\n                className={cx(\n                    this.baseTitleBtnContainerCls,\n                    `${this.baseTitleBtnContainerCls}--close-btn-container`,\n                )}\n            >\n                <Button\n                    contextCls={cx(`${this.baseCls}__close-btn`)}\n                    renderIcon={this.renderCloseBtnIcon}\n                    onClick={onCloseBtnClick}\n                    // TODO: replace the aria-label title when localization available\n                    aria-label=\"Close Button\"\n                />\n            </div>\n        );\n    };\n\n    renderMinimizeBtn = () => {\n        const { onMinimizeBtnClick } = this.props;\n\n        return (\n            <div\n                className={cx(\n                    this.baseTitleBtnContainerCls,\n                    `${this.baseTitleBtnContainerCls}--minimize-btn-container`,\n                )}\n            >\n                <Button\n                    contextCls={cx(`${this.baseCls}__minimize-btn`)}\n                    renderIcon={this.renderMinimizeBtnIcon}\n                    onClick={onMinimizeBtnClick}\n                    // TODO: replace the aria-label title when localization available\n                    aria-label=\"Minimize Button\"\n                />\n            </div>\n        );\n    };\n\n    renderMinimizeBtnIcon = () => <EurekaMinus />;\n\n    renderCloseBtnIcon = () => <EurekaX />;\n\n    baseCls = 'web-chat-window-container';\n\n    baseTitleBtnContainerCls = `${this.baseCls}__title-btn-container`;\n}\n\nexport default WindowContainer;\n","import { PureComponent, Fragment } from 'react';\nimport PropTypes from 'prop-types';\nimport cx from 'classnames';\nimport { ListItem } from '@Green-Dot-Corporation/eureka-ui-lists';\nimport { EurekaChevronRight } from '@Green-Dot-Corporation/eureka-ui-icons';\n// Styles\nimport './styles/option.scss';\n\nclass Option extends PureComponent {\n    static propTypes = {\n        contextCls: PropTypes.string,\n        text: PropTypes.string,\n        meta: PropTypes.string,\n        shouldShowAngle: PropTypes.bool,\n        onClick: PropTypes.func,\n        renderSvg: PropTypes.func,\n    };\n\n    static defaultProps = {\n        shouldShowAngle: false,\n        onClick: () => Promise.resolve(),\n        renderSvg: () => {},\n    };\n\n    render() {\n        const { contextCls, text, meta, shouldShowAngle } = this.props;\n        const modCls = this.getModCls();\n\n        return (\n            <div\n                onClick={this.handleOptionClick}\n                onKeyPress={this.handleKeyPress}\n                role=\"button\"\n                tabIndex={0}\n                className={`${this.baseCls}__option-container`}\n            >\n                <ListItem contextCls={cx(this.baseCls, modCls, contextCls)}>\n                    <Fragment>\n                        {this.renderSvgIcon()}\n                        <div className={`${this.baseCls}__text-meta-container`}>\n                            {text && (\n                                <p\n                                    className={`${this.baseCls}__text`}\n                                    aria-label={text}\n                                >\n                                    {text}\n                                </p>\n                            )}\n                            {meta && (\n                                <p\n                                    className={`${this.baseCls}__meta`}\n                                    aria-label={meta}\n                                >\n                                    {meta}\n                                </p>\n                            )}\n                        </div>\n                        {shouldShowAngle && this.renderEurekaChevronRightIcon()}\n                    </Fragment>\n                </ListItem>\n            </div>\n        );\n    }\n\n    renderSvgIcon = () => {\n        const { renderSvg } = this.props;\n\n        return renderSvg();\n    };\n\n    renderEurekaChevronRightIcon = () => <EurekaChevronRight />;\n\n    handleOptionClick = () => {\n        const { onClick } = this.props;\n        onClick();\n    };\n\n    handleKeyPress = () => {\n        console.log('key press');\n    };\n\n    // Get Modifier Classes\n    getModCls = () => {\n        const { shouldShowAngle } = this.props;\n\n        return {\n            [`${this.baseCls}--cursor-pointer`]: shouldShowAngle,\n            [`${this.baseCls}--cursor-default`]: !shouldShowAngle,\n        };\n    };\n\n    // Base class which all component class names should be\n    // derived from\n    baseCls = 'web-chat-option';\n}\n\nexport default Option;\n","import cx from 'classnames';\nimport PropTypes from 'prop-types';\nimport { PureComponent } from 'react';\n\nclass Help extends PureComponent {\n    static propTypes = {\n        contextCls: PropTypes.string,\n    };\n\n    render() {\n        const { contextCls } = this.props;\n\n        return (\n            <span className={cx(this.baseCls, contextCls)}>\n                <svg\n                    width=\"76\"\n                    height=\"64\"\n                    viewBox=\"0 0 76 64\"\n                    fill=\"none\"\n                    xmlns=\"http://www.w3.org/2000/svg\"\n                >\n                    <g clipPath=\"url(#clip0_2497_173631)\">\n                        <path\n                            d=\"M46.122 3.32666V30.5245C46.122 31.8082 45.0801 32.8512 43.7978 32.8512H29.8524L17.2696 43.7624V32.8512H3.32423C2.04189 32.8512 1 31.8082 1 30.5245V3.32666C1 2.04299 2.04189 1 3.32423 1H43.7978C45.0801 1 46.122 2.04299 46.122 3.32666Z\"\n                            fill=\"white\"\n                        />\n                        <path\n                            d=\"M17.2696 32.8512H3.32423C2.04189 32.8512 1 31.8082 1 30.5245V3.32666C1 2.04299 2.04189 1 3.32423 1H43.7978C45.0801 1 46.122 2.04299 46.122 3.32666V30.5245C46.122 31.8082 45.0801 32.8512 43.7978 32.8512H29.8524\"\n                            stroke=\"black\"\n                            strokeWidth=\"1.5\"\n                            strokeMiterlimit=\"10\"\n                            strokeLinecap=\"round\"\n                            strokeLinejoin=\"round\"\n                        />\n                        <path\n                            d=\"M29.8527 32.8516L17.2698 43.7628\"\n                            stroke=\"black\"\n                            strokeWidth=\"1.5\"\n                            strokeMiterlimit=\"10\"\n                            strokeLinecap=\"round\"\n                            strokeLinejoin=\"round\"\n                        />\n                        <path\n                            d=\"M17.2698 43.7628V32.8516\"\n                            stroke=\"black\"\n                            strokeWidth=\"1.5\"\n                            strokeMiterlimit=\"10\"\n                            strokeLinecap=\"round\"\n                            strokeLinejoin=\"round\"\n                        />\n                        <path\n                            d=\"M23.5208 28.5186C29.939 28.5186 35.1419 23.3102 35.1419 16.8853C35.1419 10.4604 29.939 5.25195 23.5208 5.25195C17.1026 5.25195 11.8997 10.4604 11.8997 16.8853C11.8997 23.3102 17.1026 28.5186 23.5208 28.5186Z\"\n                            fill=\"#FFAD9F\"\n                        />\n                        <path\n                            d=\"M23.5208 28.5186C29.939 28.5186 35.1419 23.3102 35.1419 16.8853C35.1419 10.4604 29.939 5.25195 23.5208 5.25195C17.1026 5.25195 11.8997 10.4604 11.8997 16.8853C11.8997 23.3102 17.1026 28.5186 23.5208 28.5186Z\"\n                            stroke=\"black\"\n                            strokeWidth=\"1.5\"\n                            strokeMiterlimit=\"10\"\n                            strokeLinecap=\"round\"\n                            strokeLinejoin=\"round\"\n                        />\n                        <path\n                            d=\"M20.6357 14.9597C20.6357 13.3551 21.9181 11.9912 23.6011 11.9912C25.2842 11.9912 26.5665 13.2749 26.5665 14.9597C26.5665 16.6445 25.2842 17.9282 23.6011 17.9282V19.8537\"\n                            stroke=\"black\"\n                            strokeWidth=\"1.5\"\n                            strokeMiterlimit=\"10\"\n                            strokeLinecap=\"round\"\n                            strokeLinejoin=\"round\"\n                        />\n                        <path\n                            d=\"M23.5206 23.3035C23.919 23.3035 24.2419 22.9802 24.2419 22.5814C24.2419 22.1827 23.919 21.8594 23.5206 21.8594C23.1223 21.8594 22.7993 22.1827 22.7993 22.5814C22.7993 22.9802 23.1223 23.3035 23.5206 23.3035Z\"\n                            fill=\"black\"\n                        />\n                        <path\n                            d=\"M30.1887 22.3413V49.5392C30.1887 50.8229 31.2306 51.8658 32.5129 51.8658H46.4583L59.0412 62.7771V51.8658H72.9865C74.2689 51.8658 75.3107 50.8229 75.3107 49.5392V22.3413C75.3107 21.0576 74.2689 20.0146 72.9865 20.0146H32.5129C31.2306 20.0146 30.1887 21.0576 30.1887 22.3413Z\"\n                            fill=\"white\"\n                        />\n                        <path\n                            d=\"M59.0412 51.8658H72.9865C74.2689 51.8658 75.3107 50.8228 75.3107 49.5392V22.3413C75.3107 21.0576 74.2689 20.0146 72.9865 20.0146H32.5129C31.2306 20.0146 30.1887 21.0576 30.1887 22.3413V49.5392C30.1887 50.8228 31.2306 51.8658 32.5129 51.8658H46.4583\"\n                            stroke=\"black\"\n                            strokeWidth=\"1.5\"\n                            strokeMiterlimit=\"10\"\n                            strokeLinecap=\"round\"\n                            strokeLinejoin=\"round\"\n                        />\n                        <path\n                            d=\"M46.4585 51.8662L59.0414 62.7775\"\n                            stroke=\"black\"\n                            strokeWidth=\"1.5\"\n                            strokeMiterlimit=\"10\"\n                            strokeLinecap=\"round\"\n                            strokeLinejoin=\"round\"\n                        />\n                        <path\n                            d=\"M59.041 62.7775V51.8662\"\n                            stroke=\"black\"\n                            strokeWidth=\"1.5\"\n                            strokeMiterlimit=\"10\"\n                            strokeLinecap=\"round\"\n                            strokeLinejoin=\"round\"\n                        />\n                        <path\n                            d=\"M43.3323 43.441L45.336 45.4467C45.5764 45.6874 45.897 45.6874 46.2176 45.5269L48.7021 44.0026C49.183 44.2433 49.6639 44.4037 50.1447 44.5642L50.7859 47.292C50.866 47.6129 51.1065 47.8536 51.4271 47.8536H54.2322C54.5528 47.8536 54.7932 47.6129 54.8733 47.292L55.5145 44.5642C55.9954 44.4037 56.4762 44.2433 56.9571 44.0026L59.3615 45.4467C59.6019 45.6072 60.0027 45.5269 60.2431 45.3665L62.2467 43.3607C62.4872 43.1201 62.4872 42.7991 62.3269 42.4782L60.8843 40.0713C61.1247 39.59 61.285 39.1086 61.4453 38.6272L64.1702 37.9854C64.4908 37.9051 64.7313 37.6644 64.7313 37.3435V34.5355C64.7313 34.2146 64.4908 33.9739 64.1702 33.8936L61.4453 33.2518C61.285 32.7704 61.1247 32.289 60.8843 31.8077L62.3269 29.4008C62.4872 29.1601 62.4872 28.7589 62.2467 28.5183L60.2431 26.5125C60.0027 26.2718 59.6821 26.2718 59.3615 26.4323L56.9571 27.8764C56.4762 27.6357 55.9954 27.4753 55.5145 27.3148L54.8733 24.587C54.7932 24.2661 54.5528 24.0254 54.2322 24.0254H51.4271C51.1065 24.0254 50.866 24.2661 50.7859 24.587L50.1447 27.3148C49.6639 27.4753 49.183 27.6357 48.7021 27.8764L46.2176 26.3521C45.9772 26.1916 45.5764 26.2718 45.336 26.4323L43.3323 28.438C43.0919 28.6787 43.0919 28.9996 43.2522 29.3205L44.775 31.8077C44.5345 32.289 44.3742 32.7704 44.214 33.2518L41.489 33.8936C41.1684 33.9739 40.928 34.2146 40.928 34.5355V37.3435C40.928 37.6644 41.1684 37.9051 41.489 37.9854L44.214 38.6272C44.3742 39.1086 44.5345 39.59 44.775 40.0713L43.2522 42.5584C43.0919 42.7991 43.0919 43.2003 43.3323 43.441Z\"\n                            fill=\"#86C5F9\"\n                        />\n                        <path\n                            d=\"M52.7096 41.5957C55.8523 41.5957 58.4 39.0454 58.4 35.8994C58.4 32.7534 55.8523 30.2031 52.7096 30.2031C49.5669 30.2031 47.0193 32.7534 47.0193 35.8994C47.0193 39.0454 49.5669 41.5957 52.7096 41.5957Z\"\n                            fill=\"white\"\n                            stroke=\"black\"\n                            strokeWidth=\"1.5\"\n                            strokeMiterlimit=\"10\"\n                            strokeLinecap=\"round\"\n                            strokeLinejoin=\"round\"\n                        />\n                        <path\n                            d=\"M40.7678 34.5358V37.3438C40.7678 37.6647 41.0083 37.9857 41.3288 37.9857L44.1339 38.7077C44.2942 39.1891 44.4545 39.6705 44.695 40.1519L43.2523 42.5588C43.092 42.7994 43.092 43.2006 43.3325 43.4413L45.3361 45.447C45.5766 45.6877 45.8971 45.6877 46.2177 45.5273L48.6221 44.0831C49.103 44.3238 49.5838 44.4843 50.0647 44.6447L50.7059 47.3725C50.786 47.6935 51.1066 47.9341 51.4272 47.9341H54.2323C54.5529 47.9341 54.8735 47.6935 54.9536 47.3725L55.5948 44.6447C56.0756 44.4843 56.5565 44.3238 57.0374 44.0831L59.4418 45.5273C59.6822 45.6877 60.0829 45.6877 60.3234 45.447L62.327 43.4413C62.5675 43.2006 62.5674 42.8797 62.4072 42.5588L60.9645 40.1519C61.205 39.6705 61.3653 39.1891 61.5256 38.7077L64.2505 37.9857C64.5711 37.9054 64.8115 37.6647 64.8115 37.3438V34.5358C64.8115 34.2149 64.5711 33.8939 64.2505 33.8939L61.5256 33.1719C61.3653 32.6905 61.205 32.2091 60.9645 31.7277L62.4072 29.3209C62.5674 29.0802 62.5675 28.679 62.327 28.4383L60.3234 26.4326C60.0829 26.1919 59.7624 26.1919 59.4418 26.3524L57.0374 27.7965C56.5565 27.5558 56.0756 27.3953 55.5948 27.2349L54.9536 24.4268C54.8735 24.1059 54.5529 23.8652 54.2323 23.8652H51.4272C51.1066 23.8652 50.786 24.1059 50.7059 24.4268L50.0647 27.2349C49.5838 27.3953 49.103 27.5558 48.6221 27.7965L46.2177 26.3524C45.9773 26.1919 45.5766 26.1919 45.3361 26.4326L43.3325 28.4383C43.092 28.679 43.092 28.9999 43.2523 29.3209L44.695 31.7277C44.4545 32.2091 44.2942 32.6905 44.1339 33.1719L41.3288 33.8939C41.0083 33.9742 40.7678 34.2149 40.7678 34.5358Z\"\n                            stroke=\"black\"\n                            strokeWidth=\"1.5\"\n                            strokeMiterlimit=\"10\"\n                            strokeLinecap=\"round\"\n                            strokeLinejoin=\"round\"\n                        />\n                    </g>\n                    <defs>\n                        <clipPath id=\"clip0_2497_173631\">\n                            <rect width=\"76\" height=\"64\" fill=\"white\" />\n                        </clipPath>\n                    </defs>\n                </svg>\n            </span>\n        );\n    }\n\n    baseCls = 'web-chat-svg-help';\n}\n\nexport default Help;\n","import cx from 'classnames';\nimport PropTypes from 'prop-types';\nimport { PureComponent } from 'react';\n\nclass Support extends PureComponent {\n    static propTypes = {\n        contextCls: PropTypes.string,\n    };\n\n    render() {\n        const { contextCls } = this.props;\n\n        return (\n            <span className={cx(this.baseCls, contextCls)}>\n                <svg\n                    width=\"24\"\n                    height=\"24\"\n                    viewBox=\"0 0 24 24\"\n                    fill=\"none\"\n                    xmlns=\"http://www.w3.org/2000/svg\"\n                >\n                    <path\n                        fillRule=\"evenodd\"\n                        clipRule=\"evenodd\"\n                        d=\"M17.572 5.74742C16.5426 3.78618 14.6904 2.85781 11.9005 2.85781C8.62356 2.85781 6.67515 4.181 5.86821 7.02044C8.26488 7.95926 9.75429 7.8729 12.292 6.31586L12.649 6.09678L13.0635 6.15719C15.2675 6.47838 16.4087 6.32246 17.572 5.74742ZM18.312 7.9554C18.3475 8.1375 18.3793 8.3247 18.4073 8.51704V16.0175L15.1464 19.1722C14.992 19.1365 14.8311 19.1177 14.6658 19.1177C13.4903 19.1177 12.5374 20.0706 12.5374 21.2461C12.5374 22.4216 13.4903 23.3745 14.6658 23.3745C15.8413 23.3745 16.7943 22.4216 16.7943 21.2461C16.7943 21.1053 16.7806 20.9677 16.7545 20.8345L20.3678 17.3389C20.5761 17.1374 20.7005 16.8657 20.718 16.5782C22.2243 15.9483 23.5926 14.1707 23.5926 11.9707C23.5926 9.68762 22.1904 8.11916 20.6047 7.63398C19.7371 2.99149 16.7439 0.544922 11.9005 0.544922C7.11163 0.544922 4.17836 2.99814 3.3622 7.63462C1.77734 8.12054 0.376465 9.68862 0.376465 11.9707C0.376465 14.2865 1.89266 16.1343 3.48992 16.668C4.34833 19.6336 7.23634 22.4026 10.7154 22.4026C11.3541 22.4026 11.8719 21.8848 11.8719 21.2461C11.8719 20.6074 11.3541 20.0897 10.7154 20.0897C7.92723 20.0897 5.54278 17.2363 5.54278 14.9065V9.36557C8.21016 10.3023 10.2875 10.1673 13.1425 8.50214C15.419 8.79012 16.9012 8.59086 18.312 7.9554ZM3.22989 13.673V10.3921C2.91273 10.7626 2.68935 11.2959 2.68935 11.9707C2.68935 12.6425 2.92044 13.2316 3.22989 13.673ZM21.2797 11.9707C21.2797 12.6561 21.0391 13.2555 20.7202 13.6997V10.3703C21.0474 10.7416 21.2797 11.2825 21.2797 11.9707ZM8.86331 16.4689C10.5889 18.1563 13.3047 18.1563 15.0766 16.4787C15.4275 16.1464 15.4426 15.5926 15.1104 15.2417C14.7782 14.8908 14.2243 14.8756 13.8734 15.2079C12.7799 16.2433 11.1356 16.2433 10.0868 15.2177C9.74131 14.8798 9.18732 14.886 8.84946 15.2315C8.5116 15.577 8.5178 16.131 8.86331 16.4689ZM9.81145 10.5905H8.75705C8.05412 10.5905 7.70265 10.8849 7.70265 11.4737C7.70265 12.0626 8.05412 12.357 8.75705 12.357H9.81145C10.5144 12.357 10.8658 12.0626 10.8658 11.4737C10.8658 10.8849 10.5144 10.5905 9.81145 10.5905ZM14.1386 10.5905H15.193C15.896 10.5905 16.2474 10.8849 16.2474 11.4737C16.2474 12.0626 15.896 12.357 15.193 12.357H14.1386C13.4357 12.357 13.0842 12.0626 13.0842 11.4737C13.0842 10.8849 13.4357 10.5905 14.1386 10.5905Z\"\n                        fill=\"#2945FF\"\n                    />\n                </svg>\n            </span>\n        );\n    }\n\n    baseCls = 'web-chat-svg-support';\n}\n\nexport default Support;\n","import cx from 'classnames';\nimport PropTypes from 'prop-types';\nimport { PureComponent } from 'react';\n\nclass Message extends PureComponent {\n    static propTypes = {\n        contextCls: PropTypes.string,\n    };\n\n    render() {\n        const { contextCls } = this.props;\n\n        return (\n            <span className={cx(this.baseCls, contextCls)}>\n                <svg\n                    width=\"24\"\n                    height=\"24\"\n                    viewBox=\"0 0 24 24\"\n                    fill=\"none\"\n                    xmlns=\"http://www.w3.org/2000/svg\"\n                >\n                    <path\n                        d=\"M21.73 8.87316L5.39671 0.706491C4.75212 0.385668 4.02426 0.271453 3.31238 0.379418C2.60051 0.487382 1.93925 0.812273 1.41876 1.30979C0.898282 1.80731 0.543906 2.45325 0.403953 3.15954C0.263999 3.86582 0.345279 4.59809 0.636711 5.25649L3.43671 11.5215C3.50024 11.673 3.53296 11.8356 3.53296 11.9998C3.53296 12.1641 3.50024 12.3267 3.43671 12.4782L0.636711 18.7432C0.399528 19.276 0.299259 19.8596 0.345018 20.4411C0.390776 21.0225 0.58111 21.5833 0.898723 22.0725C1.21634 22.5617 1.65116 22.9637 2.16367 23.2421C2.67618 23.5205 3.25014 23.6663 3.83338 23.6665C4.37965 23.661 4.91778 23.5335 5.40838 23.2932L21.7417 15.1265C22.3211 14.835 22.8081 14.3883 23.1483 13.8362C23.4886 13.2842 23.6688 12.6484 23.6688 11.9998C23.6688 11.3513 23.4886 10.7155 23.1483 10.1634C22.8081 9.6113 22.3211 9.16461 21.7417 8.87316H21.73ZM20.6917 13.0382L4.35838 21.2048C4.1439 21.3078 3.90306 21.3428 3.66816 21.305C3.43326 21.2672 3.21552 21.1585 3.04414 20.9935C2.87276 20.8285 2.75594 20.615 2.70933 20.3817C2.66272 20.1483 2.68856 19.9064 2.78338 19.6882L5.57171 13.4232C5.60781 13.3395 5.63897 13.2538 5.66504 13.1665H13.7034C14.0128 13.1665 14.3095 13.0436 14.5283 12.8248C14.7471 12.606 14.87 12.3092 14.87 11.9998C14.87 11.6904 14.7471 11.3937 14.5283 11.1749C14.3095 10.9561 14.0128 10.8332 13.7034 10.8332H5.66504C5.63897 10.7459 5.60781 10.6602 5.57171 10.5765L2.78338 4.31149C2.68856 4.09328 2.66272 3.8513 2.70933 3.61799C2.75594 3.38468 2.87276 3.17119 3.04414 3.00616C3.21552 2.84113 3.43326 2.73244 3.66816 2.69467C3.90306 2.65689 4.1439 2.69184 4.35838 2.79482L20.6917 10.9615C20.8828 11.0594 21.0432 11.2081 21.1552 11.3913C21.2672 11.5745 21.3264 11.7851 21.3264 11.9998C21.3264 12.2145 21.2672 12.4251 21.1552 12.6083C21.0432 12.7915 20.8828 12.9403 20.6917 13.0382Z\"\n                        fill=\"#2945FF\"\n                    />\n                </svg>\n            </span>\n        );\n    }\n\n    baseCls = 'web-chat-svg-message';\n}\n\nexport default Message;\n","import React, { PureComponent } from 'react';\nimport PropTypes from 'prop-types';\nimport cx from 'classnames';\nimport {\n    EurekaTriangleAlert,\n    EurekaCircleX,\n} from '@Green-Dot-Corporation/eureka-ui-icons';\nimport { VARIANTS } from '@Green-Dot-Corporation/eureka-ui-buttons';\nimport ModalWrapper from '../modal-wrapper/ModalWrapper';\nimport WindowContainer from '../window-container/WindowContainer';\nimport Option from './Option';\nimport Help from '../svg/Help';\nimport Support from '../svg/Support';\nimport Message from '../svg/Message';\n// Styles\nimport './styles/choose-option-window.scss';\n\nconst { PRIMARY, SECONDARY } = VARIANTS;\nclass ChooseOptionWindow extends PureComponent {\n    static propTypes = {\n        contextCls: PropTypes.string,\n        headerTitle: PropTypes.string,\n    };\n\n    static defaultProps = {\n        // TODO: replace the title when localization available\n        headerTitle: 'How can we help?',\n    };\n\n    constructor() {\n        super();\n        this.state = {\n            shouldShowModalConfirm: false,\n            shouldShowModalError: false,\n        };\n    }\n\n    render() {\n        const { contextCls } = this.props;\n        const { shouldShowModalConfirm, shouldShowModalError } = this.state;\n\n        return (\n            <WindowContainer\n                contextCls={cx(this.baseCls, contextCls)}\n                shouldShowCloseBtn\n                onCloseBtnClick={this.handleCloseBtnClick}\n            >\n                <div className={`${this.baseCls}__header-container`}>\n                    {this.renderSvg()}\n                    {this.renderHeader()}\n                </div>\n                {this.renderOptions()}\n                {shouldShowModalConfirm && this.renderModalConfirm()}\n                {shouldShowModalError && this.renderModalError()}\n            </WindowContainer>\n        );\n    }\n\n    renderSvg = () => {\n        const { contextCls } = this.props;\n\n        return (\n            <Help\n                contextCls={cx(\n                    `${this.baseCls}__header-container-svg`,\n                    contextCls,\n                )}\n            />\n        );\n    };\n\n    renderModalConfirm = () => {\n        const { contextCls } = this.props;\n        const modalActions = [\n            {\n                variant: PRIMARY,\n                text: 'Close message',\n                ariaLabel: 'Close message',\n                onClick: this.handlePrimaryBtnClick,\n            },\n            {\n                variant: SECONDARY,\n                text: 'Cancel',\n                ariaLabel: 'Cancel',\n                onClick: this.handleSecondaryBtnClick,\n            },\n        ];\n\n        return (\n            <ModalWrapper\n                contextCls={cx(`${this.baseCls}__modal-wrapper`, contextCls)}\n                modalActions={modalActions}\n                svgType=\"info\"\n            >\n                <EurekaCircleX />\n                {this.renderModalTitle()}\n                {this.renderModalText()}\n            </ModalWrapper>\n        );\n    };\n\n    renderModalError = () => {\n        const { contextCls } = this.props;\n        const modalActions = [\n            {\n                variant: PRIMARY,\n                text: 'OK',\n                ariaLabel: 'OK',\n                onClick: this.handlePrimaryBtnClick,\n            },\n        ];\n\n        return (\n            <ModalWrapper\n                contextCls={cx(`${this.baseCls}__modal-wrapper`, contextCls)}\n                modalActions={modalActions}\n                svgType=\"error\"\n            >\n                <EurekaTriangleAlert />\n                {this.renderModalTitleError()}\n                {this.renderModalTextError()}\n            </ModalWrapper>\n        );\n    };\n\n    renderModalTitle = () => {\n        return (\n            <div className=\"modal-wrapper__title\">\n                Are you sure you want to close this message?\n            </div>\n        );\n    };\n\n    renderModalTitleError = () => {\n        return (\n            <div className=\"modal-wrapper__title\">\n                The file uploaded is too large\n            </div>\n        );\n    };\n\n    renderModalTextError = () => {\n        return (\n            <div className=\"modal-wrapper__text\">\n                Please select a file smaller than 150MB for upload.\n            </div>\n        );\n    };\n\n    renderModalText = () => {\n        return (\n            <div className=\"modal-wrapper__text\">\n                Your message will not be sent. This cannot be undone.\n            </div>\n        );\n    };\n\n    renderHeader = () => {\n        const { headerTitle } = this.props;\n\n        return (\n            <div\n                className={`${this.baseCls}__header-container-title`}\n                aria-label={headerTitle}\n            >\n                {headerTitle}\n            </div>\n        );\n    };\n\n    renderOptions = () => {\n        return (\n            <div className={`${this.baseCls}__content-container`}>\n                {/* TODO: replace the title and meta when localization available */}\n                <Option\n                    contextCls={`${this.baseCls}__option-support`}\n                    shouldShowAngle\n                    text=\"Chat with a support agent\"\n                    meta=\"Estimated wait time 5 minutes.\"\n                    onClick={this.handleSupportOptionClick}\n                    renderSvg={this.renderSvgSupport}\n                />\n                {/* TODO: replace the title and meta when localization available */}\n                <Option\n                    contextCls={`${this.baseCls}__option-message`}\n                    shouldShowAngle\n                    text=\"Leave a message\"\n                    meta=\"Describe your issue and we will get back to you.\"\n                    onClick={this.handleMessageOptionClick}\n                    renderSvg={this.renderSvgMessage}\n                />\n            </div>\n        );\n    };\n\n    renderSvgSupport = () => (\n        <Support contextCls={`${this.baseCls}__svg-container`} />\n    );\n\n    renderSvgMessage = () => (\n        <Message contextCls={`${this.baseCls}__svg-container`} />\n    );\n\n    handleCloseBtnClick = () => {\n        // TODO: will replace by real close conversation session when Gateway API is ready\n        console.log('close btn click');\n    };\n\n    handleSupportOptionClick = () => {\n        // TODO: will replace by real close conversation session when Gateway API is ready\n        console.log('support option click');\n        this.setState({ shouldShowModalConfirm: true });\n    };\n\n    handleMessageOptionClick = () => {\n        // TODO: will replace by real close conversation session when Gateway API is ready\n        console.log('message option click');\n        this.setState({ shouldShowModalError: true });\n    };\n\n    handleSecondaryBtnClick = () => {\n        this.setState({ shouldShowModalConfirm: false });\n    };\n\n    handlePrimaryBtnClick = () => {\n        this.setState({\n            shouldShowModalConfirm: false,\n            shouldShowModalError: false,\n        });\n    };\n\n    baseCls = 'choose-option-window';\n}\n\nexport default ChooseOptionWindow;\n"],"names":["PRIMARY","VARIANTS","SECONDARY","ModalWrapper","renderModalActions","modalActions","props","primaryAction","find","action","variant","secondaryAction","renderAction","onClick","text","ariaLabel","modCls","getActionsModCls","Button","contextCls","cx","baseCls","getModCls","svgType","length","baseOverlayCls","this","children","Modal","dialogContextCls","overlayContextCls","hasCloseButton","isOpen","PureComponent","defaultProps","WindowContainer","renderHeading","title","shouldShowMinimizeBtn","shouldShowCloseBtn","className","renderMinimizeBtn","renderCloseBtn","onCloseBtnClick","baseTitleBtnContainerCls","renderIcon","renderCloseBtnIcon","onMinimizeBtnClick","renderMinimizeBtnIcon","EurekaMinus","EurekaX","Tile","Promise","resolve","Option","renderSvgIcon","renderSvg","renderEurekaChevronRightIcon","EurekaChevronRight","handleOptionClick","handleKeyPress","console","log","shouldShowAngle","meta","onKeyPress","role","tabIndex","ListItem","Fragment","Help","width","height","viewBox","fill","xmlns","clipPath","d","stroke","strokeWidth","strokeMiterlimit","strokeLinecap","strokeLinejoin","id","Support","fillRule","clipRule","Message","ChooseOptionWindow","renderModalConfirm","handlePrimaryBtnClick","handleSecondaryBtnClick","EurekaCircleX","renderModalTitle","renderModalText","renderModalError","EurekaTriangleAlert","renderModalTitleError","renderModalTextError","renderHeader","headerTitle","renderOptions","handleSupportOptionClick","renderSvgSupport","handleMessageOptionClick","renderSvgMessage","handleCloseBtnClick","setState","shouldShowModalConfirm","shouldShowModalError","state"],"sourceRoot":""}