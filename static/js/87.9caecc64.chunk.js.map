{"version":3,"file":"static/js/87.9caecc64.chunk.js","mappings":"6KAcA,EAdwB,SAACA,GACjBA,GAAeA,aAAuBC,UACtC,6BAAqBC,MACjB,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC/BJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,O,kBCFxB,EAHmB,WACf,OAAO,SAACQ,EAAA,EAAD,KCoBEC,EAAAA,WAAoBC,SAASC,eAAe,SACpDC,QACD,SAAC,eAAD,WACI,SAAC,EAAD,OAORC,K,oBChCA,IAAIC,EAAIC,EAAQ,KAEdC,EAAQC,WAAaH,EAAEG,WACvBD,EAAQE,YAAcJ,EAAEI","sources":["reportWebVitals.js","ChatModule.js","bootstrap.js","../node_modules/react-dom/client.js"],"sourcesContent":["const reportWebVitals = (onPerfEntry) => {\n    if (onPerfEntry && onPerfEntry instanceof Function) {\n        import('web-vitals').then(\n            ({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n                getCLS(onPerfEntry);\n                getFID(onPerfEntry);\n                getFCP(onPerfEntry);\n                getLCP(onPerfEntry);\n                getTTFB(onPerfEntry);\n            },\n        );\n    }\n};\n\nexport default reportWebVitals;\n","// import ChatWindow from './components/chat-window/ChatWindow';\nimport ChooseOptionWindow from './components/choose-option-window/ChooseOptionWindow';\n\nconst ChatModule = () => {\n    return <ChooseOptionWindow />;\n};\nexport default ChatModule;\n","/* eslint-disable prettier/prettier */\r\nimport React from 'react';\r\nimport ReactDOM from 'react-dom/client';\r\nimport initMirageServer from '@Green-Dot-Corporation/eureka-lib-mock-utils/src/initMirageServer';\r\nimport reportWebVitals from './reportWebVitals';\r\nimport registerRoutes from './mock/registerRoutes';\r\nimport ChatModule from './ChatModule';\r\nimport './styles/index.scss';\r\n\r\nif (process.env.NODE_ENV === 'development') {\r\n    // Shutdown any existing instance of server to avoid multiple pretender\r\n    // instances error\r\n    if (window.server && typeof window.server.shutdown === 'function') {\r\n        window.server.shutdown();\r\n    }\r\n\r\n    // Create server and pass routes and other options\r\n    window.server = initMirageServer({\r\n        routes() {\r\n            registerRoutes(this);\r\n        },\r\n    });\r\n}\r\n\r\nconst root = ReactDOM.createRoot(document.getElementById('root'));\r\nroot.render(\r\n    <React.StrictMode>\r\n        <ChatModule />\r\n    </React.StrictMode>,\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n","'use strict';\n\nvar m = require('react-dom');\nif (process.env.NODE_ENV === 'production') {\n  exports.createRoot = m.createRoot;\n  exports.hydrateRoot = m.hydrateRoot;\n} else {\n  var i = m.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED;\n  exports.createRoot = function(c, o) {\n    i.usingClientEntryPoint = true;\n    try {\n      return m.createRoot(c, o);\n    } finally {\n      i.usingClientEntryPoint = false;\n    }\n  };\n  exports.hydrateRoot = function(c, h, o) {\n    i.usingClientEntryPoint = true;\n    try {\n      return m.hydrateRoot(c, h, o);\n    } finally {\n      i.usingClientEntryPoint = false;\n    }\n  };\n}\n"],"names":["onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ChooseOptionWindow","ReactDOM","document","getElementById","render","reportWebVitals","m","require","exports","createRoot","hydrateRoot"],"sourceRoot":""}